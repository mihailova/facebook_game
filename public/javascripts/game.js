// Generated by CoffeeScript 1.6.1
(function() {
  var Game;

  Game = (function() {

    function Game(user_id) {
      var _this = this;
      this.user_id = user_id;
      this.selectors = {
        users_table: $('#users-table'),
        category: $('#category'),
        message: $('#message'),
        bet_btn: $('.bet-btn'),
        button_example: $('#users-table')
      };
      this.selectors.button_example.delegate('div span', 'click', function() {
        return _this.ws.send(JSON.stringify({
          kind: 'message',
          text: 'Foooo!'
        }));
      });
      this;
    }

    Game.prototype.start = function() {
      var _this = this;
      this.ws = new WebSocket('ws://localhost:9000/game/join');
      this.ws.onerror = function() {
        return alert("WebSocket Error " + error);
      };
      this.ws.onclose = function() {
        return _this.render({
          message: 'Connection closed'
        });
      };
      this.ws.onopen = function() {
        return _this.render({
          message: 'Connection opened'
        });
      };
      this.ws.onmessage = function(e) {
        var data;
        data = JSON.parse(e.data);
        switch (data.kind) {
          case 'join':
          case 'quit':
            return _this.render(data, 'users-table', _this.selectors.users_table);
          case 'question':
            return console.log(data.message);
          case 'start':
            return _this.render(data, 'message', _this.selectors.message);
          case 'category':
            return _this.showCategory(data);
          case 'user_on_turn':
            return _this.betting(data);
          case 'message':
            return console.log("User msg: " + data.message);
        }
      };
      return this;
    };

    Game.prototype.stop = function() {
      return this.ws.close();
    };

    Game.prototype.render = function(data, tmpl_name, el) {
      var result, template;
      if (tmpl_name == null) {
        tmpl_name = 'status';
      }
      if (el == null) {
        el = $('#status');
      }
      template = $("#" + tmpl_name + "-template").html();
      result = _.template(template, data);
      return el.html(result);
    };

    Game.prototype.showCategory = function(data) {
      this.render(data, 'category', this.selectors.category);
      return $("#message").hide();
    };

    Game.prototype.betting = function(data) {
      var current_player;
      current_player = parseInt(data.message);
      $('.betting').removeClass('betting');
      $("#member-" + current_player).addClass('betting');
      if (current_player === this.user_id) {
        return this.selectors.bet_btn.show();
      } else {
        return this.selectors.bet_btn.hide();
      }
    };

    return Game;

  })();

  window.Game = Game;

}).call(this);
